{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","margin","width","window","screen","height","Circles","ref","useRef","useEffect","a","fetch","then","response","json","lewygoalsJSON","mullergoalsJSON","values","name","dataReady","allGroup","map","grpName","find","vl","d","round","goals","myColor","d3","domain","range","svgElement","current","attr","append","x","length","call","y","line","selectAll","data","enter","style","datum","value","text","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de254955.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Lewy vs MÃ¼ller</h1>\n      <Circles />\n    </div>\n  );\n}\n\nconst margin = { top: 20, right: 120, bottom: 30, left: 60 },\n  width = (window.screen.width - margin.left - margin.right) * 0.85,\n  height = (window.screen.height - margin.top - margin.bottom) * 0.85;\n\nconst Circles = () => {\n  const ref = useRef();\n\n  useEffect(() => {\n\n    async function fetchData() {\n      const lewygoalsJSON = await fetch(\n        'https://raw.githubusercontent.com/korczynsk1/lewyvsmuller/main/src/lewygoals.json'\n      ).then((response) => response.json());\n      const mullergoalsJSON = await fetch(\n        'https://raw.githubusercontent.com/korczynsk1/lewyvsmuller/main/src/mullergoals.json'\n      ).then((response) => response.json());\n      const values = [\n        { name: 'Lewy 20/21', values: lewygoalsJSON },\n        { name: 'Muller 71/72', values: mullergoalsJSON },\n      ];\n    \n    const allGroup = ['Lewy 20/21', 'Muller 71/72'];\n\n    const dataReady = allGroup.map(function (grpName) {\n      // .map allows to do something for each element of the list\n      return {\n        name: grpName,\n        values: values\n          .find((vl) => vl.name === grpName)\n          .values.map(function (d) {\n            return { round: d.round, goals: d.goals };\n          }),\n      };\n    });\n\n    const myColor = d3.scaleOrdinal().domain(allGroup).range(d3.schemeSet2);\n\n    const svgElement = d3\n      .select(ref.current)\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    var x = d3\n      .scaleLinear()\n      .domain([1, mullergoalsJSON[mullergoalsJSON.length - 1].round])\n      .range([0, width]);\n\n    svgElement\n      .append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x));\n    // Add Y axis\n    var y = d3\n      .scaleLinear()\n      .domain([0, mullergoalsJSON[mullergoalsJSON.length - 1].goals])\n      .range([height, 0]);\n    svgElement.append('g').call(d3.axisLeft(y));\n    // Add the line\n    const line = d3\n      .line()\n      .x(function (d) {\n        return x(+d.round);\n      })\n      .y(function (d) {\n        return y(+d.goals);\n      });\n\n    svgElement\n      .selectAll('myLines')\n      .data(dataReady)\n      .enter()\n      .append('path')\n      .attr('d', function (d) {\n        return line(d.values);\n      })\n      .attr('stroke', function (d) {\n        return myColor(d.name);\n      })\n      .style('stroke-width', 4)\n      .style('fill', 'none');\n\n    // First we need to enter in a group\n    svgElement\n      .selectAll('myDots')\n      .data(dataReady)\n      .enter()\n      .append('g')\n      .style('fill', function (d) {\n        return myColor(d.name);\n      })\n      // Second we need to enter in the 'values' part of this group\n      .selectAll('myPoints')\n      .data(function (d) {\n        return d.values;\n      })\n      .enter()\n      .append('circle')\n      .attr('cx', function (d) {\n        return x(d.round);\n      })\n      .attr('cy', function (d) {\n        return y(d.goals);\n      })\n      .attr('r', 5)\n      .attr('stroke', 'white');\n    // .on(\"mouseover\", function(d) {\n    //     tooltip.transition()\n    //          .duration(200)\n    //          .style(\"opacity\", .9);\n    //     tooltip.html(d.x + \"-\" + d.y )\n    //          .style(\"left\", d3.select(this).attr(\"cx\") + \"px\")\n    //          .style(\"top\", d3.select(this).attr(\"cy\") + \"px\");\n    // })\n    // .on(\"mouseout\", function(d) {\n    //     tooltip.transition()\n    //          .duration(500)\n    //          .style(\"opacity\", 0)\n    //   }\n    // )\n\n    svgElement\n      .selectAll('myLabels')\n      .data(dataReady)\n      .enter()\n      .append('g')\n      .append('text')\n      .datum(function (d) {\n        return { name: d.name, value: d.values[d.values.length - 1] };\n      }) // keep only the last value of each time series\n      .attr('transform', function (d) {\n        return 'translate(' + x(d.value.round) + ',' + y(d.value.goals) + ')';\n      }) // Put the text at the position of the last point\n      .attr('x', 12) // shift the text a bit more right\n      .text(function (d) {\n        return d.name;\n      })\n      .style('fill', function (d) {\n        return myColor(d.name);\n      })\n      .style('font-size', 15);\n      }\n      fetchData();\n  }, []);\n\n  return <svg ref={ref} />;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}